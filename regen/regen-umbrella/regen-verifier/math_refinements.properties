java.lang.Math.PI=_ == 3.141592653589793
java.lang.Math.E=_ == 2.7182818284590452354
java.lang.Math.abs(int)= @Refinement("( _ == arg0 ||  _ == -arg0) && _ > 0")java.lang.Math.abs(int)
java.lang.Math.abs(float)= @Refinement("( _ == arg0 ||  _ == -arg0) && _ > 0")java.lang.Math.abs(float)
java.lang.Math.abs(double)= @Refinement("( _ == arg0 ||  _ == -arg0) && _ > 0")java.lang.Math.abs(double)
java.lang.Math.abs(long)= @Refinement("( _ == arg0 ||  _ == -arg0) && _ > 0")java.lang.Math.abs(long)
java.lang.Math.max(int,int):@Refinement("((arg0 > arg1)-->( _ == arg0)) && ((arg0 <= arg1)-->( _ == arg1))")java.lang.Math.max(int,int)
java.lang.Math.addExact(int,int):@Refinement("_ == (arg0 + arg1)")java.lang.Math.addExact(int,int)
java.lang.Math.addExact(long,long):@Refinement("_ == (arg0 + arg1)")java.lang.Math.addExact(long,long)
java.lang.Math.random():@Refinement("_ > 0.0 && _ < 1.0")java.lang.Math.random()
java.lang.Math.sqrt(double):@Refinement("_ > 0")java.lang.Math.sqrt(double)
java.lang.Math.copySign(float,float):@Refinement("((arg1 > 0) --> (_ > 0)) && (!(arg1 > 0)-->!(_ > 0)) && ((_ == arg0) || (_ == (-arg0)))")
java.lang.Math.decrementExact(int):@Refinement(" _ == (arg0 - 1)")java.lang.Math.decrementExact(int)
java.lang.Math.decrementExact(long):@Refinement(" _ == (arg0 - 1)")java.lang.Math.decrementExact(long)
java.lang.Math.incrementExact(int):@Refinement(" _ == (arg0 + 1)")java.lang.Math.incrementExact(int)
java.lang.Math.incrementExact(long):@Refinement(" _ == (arg0 + 1)")java.lang.Math.incrementExact(long)
java.lang.Math.max(int,int):@Refinement("((arg0 > arg1)-->( _ == arg0)) && ((arg0 <= arg1)-->( _ == arg1))")java.lang.Math.max(int,int)
java.lang.Math.min(int,int):@Refinement("((arg0 < arg1)-->( _ == arg0)) && ((arg0 >= arg1)-->( _ == arg1))")java.lang.Math.min(int,int)
java.lang.Math.multiplyExact(int,int):@Refinement("_ == (arg0 * arg1)")java.lang.Math.multiplyExact(int,int)
java.lang.Math.negateExact(int):@Refinement("_ == (-arg0")java.lang.Math.negateExact(int)
java.lang.Math.subtractExact(int,int):@Refinement("_ == (arg0 - arg1)")java.lang.Math.subtractExact(int,int)

